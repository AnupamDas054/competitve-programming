#include<bits/stdc++.h>
using namespace std;
vector<int>adj[1000005];
int vis[100005],low[100005],in[100005];
int timer,cnt;
set<int>s;

void dfs(int ind,int par)
{
    vis[ind]=1;
    in[ind]=low[ind]=timer;
    timer++;
    int children=0;
    for(auto it:adj[ind])
    {
        if(it==par)
          continue;
        if(vis[it]==1)
        {
            low[ind]=min(low[ind],in[it]);
        }
        else
        {
            dfs(it,ind);
            children++;
            low[ind]=min(low[ind],low[it]);
            if(low[it]>=in[ind] && par!=-1)
            {
                s.insert(ind);
            }
        }
    }
    if(par==-1 && children>1)
        s.insert(ind);
}

int main()
{
    int m,n;
    while(1){
    cin>>n>>m;
    if(m==0 && n==0)
        return 0;
    for(int i=0;i<m;i++)
    {
        int x,y;cin>>x>>y;
        adj[x].push_back(y);
        adj[y].push_back(x);
    }
    for(int i=1;i<=n;i++)
    {
        if(vis[i]==0)
            dfs(i,-1);
    }
    cout<<s.size()<<endl;
    for(int i=0;i<=n;i++)
        adj[i].clear();
    memset(vis,0,sizeof vis);
    memset(low,0,sizeof low);
    memset(in,0,sizeof in);
    timer=0,cnt=0;
    s.clear();
    }
}
