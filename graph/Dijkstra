#include<bits/stdc++.h>

using namespace std;
vector< pair<int,int> > edges[20000];
int dis[20000];
int dikastra(int st, int des)
{
    for(int i=0;i<=20000;i++) dis[i]=1e8+1;
    priority_queue< pair<int,int> > pq;
    dis[st]=0;
    pq.push({-dis[st],st});
    while(pq.size()>0)
    {
        auto tmp=pq.top();
        pq.pop();
        int dis1=-tmp.first;
        int cur=tmp.second;
        if (cur==des) return dis[cur];
        //cout<<dis1<<" "<<cur<<endl;
        for(auto temp: edges[cur])
        {
            int to=temp.first;
            int dis2=temp.second;
            //cout<<dis2<<" "<<to<<endl;
            if(dis1+dis2<dis[to])
            {
                dis[to]=dis1+dis2;
                pq.push({-dis[to],to});
                //cout<<dis[to]<<" "<<to<<endl;
            }
        }
    }
    return dis[des];
   // for(int i=1;i<=des;i++)
     //   cout<<i<<" "<<dis[i]<<endl;
}
int main()
{
    int t;
    cin>>t;
    for(int i=1; i<=t;i++){
    int n,m;
    cin>>n>>m;
    for(int j=0;j<m;j++)
    {
        int x,y,z;
        cin>>x>>y>>z;
        edges[x].push_back({y,z});
        edges[y].push_back({x,z});
    }
    int ans=dikastra(1,n);
    if(ans==1e8+1)
    {
        cout<<"Case "<<i<<": impossible\n";
    }
    else
        cout<<"Case "<<i<<": "<<ans<<endl;

    for(int j=0;j<=1000;j++)
        edges[j].clear();
    }
    return 0;
}
