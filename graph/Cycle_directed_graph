#include<bits/stdc++.h>
using namespace std;

bool vis[1000004],rec[1000005];
vector<int>adj[1000004];
bool dfs(int node)
{
    if(!vis[node])
    {
        vis[node]=rec[node]=true;
        for(auto it: adj[node])
        {
            if(!vis[it] && dfs(it))return true;
            else if(rec[it]) return true;
          //  cout<<"check of "<<it<<endl;
        }
    }
    rec[node]=false;
    ///cout<<"node return "<<node<<endl;
    return false ;
}
int main()
{
    int n,m;cin>>n>>m;
    for(int i=0;i<m;i++)
    {
        int x,y;cin>>x>>y;
        adj[x].push_back(y);
    }
    for(int i=1;i<=n;i++)
    {
        if(vis[i]==false)
        {
            if(dfs(i))
            {
                cout<<"cycle found for calling node "<<i<<endl;
            }
        }
    }
}
