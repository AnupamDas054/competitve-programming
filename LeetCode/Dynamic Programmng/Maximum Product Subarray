/*
    Maximum Product Subarray
    Memory: O(N)
    
    Find the contiguous subarray within an array (containing at least one number) which has the largest product.

    Input: [2,3,-2,4]
    Output: 6
    Explanation: [2,3] has the largest product 6.
    
    Input: [-2,0,-1]
    Output: 0
    Explanation: The result cannot be 2, because [-2,-1] is not a subarray
    
*/


 int maxProduct(vector<int>& arr) {
        int currMax = arr[0];
        int currMin = arr[0];
        int finalMax= arr[0];
        
        for(int i=1; i<arr.size(); i++)
        {
            int temp=currMax;
            currMax = max({currMax*arr[i], currMin*arr[i], arr[i]});
            currMin = min({temp*arr[i], currMin*arr[i],arr[i]});
            if(currMax>finalMax)
                finalMax=currMax;
        }
        return finalMax;
        
    }
