/*
    Longest Increasing Subsequence
    
    Given an integer array nums, return the length of the longest strictly increasing subsequence.

     Input: nums = [10,9,2,5,3,7,101,18]
     Output: 4
     Explanation: The longest increasing subsequence is [2,3,7,101], therefore the length is 4.
    
*/

//O(n^2)
int lengthOfLIS(vector<int>& nums) {
         int sz= nums.size();
         int dp[sz+1];
         for(int i=0;i<sz;i++)
             dp[i]=1;//every element is  a element of size 1
        int ans=1;
         for(int i=0;i<sz;i++)
         {
             for(int j=i+1;j<sz;j++)
             {
                 if(nums[i]<nums[j])
                 {
                     dp[j]=max(dp[i]+1,dp[j]);
                     ans=max(ans,dp[j]);
                 }
             }
         }
        return ans;
        
    }
